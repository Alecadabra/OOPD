MAIN
        exit (Boolean) = exitPrompt( 1 )    
        WHILE ( !exit )

            // person (menu, name, hisher)
            message (String) = "Select person:\n1: Joey, 2: Cory, 3: Rachel"
            personMenu = inputInt( message, 1, 3 )
            personName (String) = findPersonName( personMenu )
            personHisHer (String) = findPersonHisHer( personMenu )

            // fish (menu, num, name)
            fish1Name (String) = findFishName( calcFishNum( personMenu, 1 ) )
            fish2Name (String) = findFishName( calcFishNum( personMenu, 2 ) )
            message = ( "Select fish:\n1: " + fish1Name + ", 2: " +
            fish2Name + "." )
            fishMenu = inputInt( message, 1, 2 )
            fishNum = calcFishNum( personMenu, fishMenu )
            fishName (String) = findFishName( fishNum )

            // pond (depth, length, width, volume)
            pondDepth (Real) = inputReal( "Input pond depth (m)", 0 )
            pondLength (Real) = inputReal( "Input pond length (m)", 0 )
            pondWidth (Real) = inputReal( "Input pond width (m)", 0 )
            pondVolume (Real) = depth * length * width

            // final answer
            fishVolume (Real) = calcFishVolume( fishNum )
            pondFish (Integer) = (int)( pondVolume * fishVolume )
            pondVolume = (Covert to Integer)pondVolume

            // answer output
            OUTPUT ( personName + " can store " + pondFish + " " + fishName +
            " in " + personHisHer + " " + pondVolume + "m^3 pond."

            // exit or loop
            exit = exitPrompt( 2 )

        ENDWHILE
ENDMAIN

SUBMODULE: exitPrompt
IMPORT: message
EXPORT: exit (Boolean)
ALGORITHM:
    CASE ( message )
        1:
            prompt (String) = "Welcome. Enter '1' to start or '2' to exit."
        2:
            prompt = "Enter '1' to go again ot '2' to exit."
    ENDCASE
    num (Integer) = inputInt( prompt, 1, 2 )
    CASE ( num )
        1:
            exit = false
        2:
            exit = true
    ENDCASE
END SUBMODULE

SUBMODULE: inputInt
IMPORT: message (String), min (Integer), max (Integer)
EXPORT: output (Integer)
ALGORITHM:
    OUTPUT message
    INPUT output
    WHILE ( ( output < min ) || ( output > max ) )
        IF ( output < min )
            OUTPUT = "Error: " + output + " < " + min + ".\n" + message
            INPUT output
        ELSE IF ( output > max )
            OUTPUT = "Error: " + output + " >" + max + ".\n" + message
            INPUT output
        END IF
    END WHILE
END SUBMODULE

SUBMODULE: inputReal
IMPORT: message (String), min (Real)
EXPORT: output (Real)
ALGORITHM:
    DO
        OUTPUT message
        message = "Error: " + output + " <=  " + min ".\n" + message
        INPUT output
    WHILE ( output <= min )
END SUBMODULE


SUBMODULE: findFishName
IMPORT: fishNum
EXPORT: fish (String)
ALGORITHM:
    CASE fishNum
        1.1: fish (String) = "Sting Rays"
        1.2: fish = "Arowana"
        2.1: fish = "Koi"
        2.2: fish = "Puffer Fish"
        3.1: fish = "Turtles"
        3.2: fish = "Frogs"
        DEFAULT: fish = "???"
            OUTPUT "Error"
    ENDCASE
END SUBMODULE

SUBMODULE: calcFishNum
IMPORT: person, fishMenu
EXPORT: fishNum
ALGORITHM:
    fishDec (Real) = ( (Convert to Real)fishMenu ) / 10
    fishDec = ( (Convert to Real)person ) + fishDec
    // fishDec will be 1.1, 1.2, 2.1, 2.2, 3.1, or 3.2.
END SUBMODULE

SUBMODULE: calcFishVolume
IMPORT: fishNum
EXPORT: fish
ALGORITHM:
    CASE fishNum
        1.1: fish (Real) = 0.5
        1.2: fish = 0.4
        2.1: fish = 0.6
        2.2: fish = 0.8
        3.1: fish = 1.2
        3.2: fish = 4.5
        DEFAULT: fish = 0
            OUTPUT "Error"
    ENDCASE
END SUBMODULE

SUBMODULE: findPersonName
IMPORT: num
EXPORT: name (String)
ALGORITHM:
    CASE num
        1: name = "Joey"
        2: name = "Cory"
        3: name = "Rachel"
    ENDCASE
END SUBMODULE

SUBMODULE: findPersonHisHer
IMPORT: personMenu
EXPORT: sex (String)
ALGORITHM:
    CASE personMenu
        1: 2:
            sex = "his"
        3:
            sex = "her"
    ENDCASE
END SUBMODULE
